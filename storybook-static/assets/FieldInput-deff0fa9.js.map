{"version":3,"file":"FieldInput-deff0fa9.js","sources":["../../src/FieldInput/FieldInput.tsx"],"sourcesContent":["import { useState } from 'react'\nimport type { FieldRenderProps } from 'react-final-form'\nimport { Text, Input } from 'theme-ui'\n\ntype FieldProps = FieldRenderProps<any, any> & { children?: React.ReactNode }\n\nexport interface Props extends FieldProps {\n  // additional fields intending to pass down\n  disabled?: boolean\n  children?: React.ReactNode\n  showCharacterCount?: boolean\n  'data-cy'?: string\n  customOnBlur?: (event: any) => void\n}\n\ntype InputModifiers = {\n  capitalize?: boolean\n}\n\nconst capitalizeFirstLetter = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1)\n\nconst processInputModifiers = (value: any, modifiers: InputModifiers = {}) => {\n  if (typeof value !== 'string') return value\n  if (modifiers.capitalize) {\n    value = capitalizeFirstLetter(value)\n  }\n  return value\n}\n\nconst TextLimitIndicator = ({\n  curSize,\n  minSize,\n  maxSize,\n}: {\n  curSize: number\n  minSize: number\n  maxSize: number\n}) => {\n  const percMax = curSize / maxSize\n  const colorVec = [\n    { value: 1.0, color: 'red' },\n    { value: 0.75, color: 'red2' },\n    { value: 0.6, color: 'accent.base' },\n  ]\n  let color = colorVec.find((cur) => cur.value <= percMax)?.color ?? 'black'\n  if (curSize < minSize) {\n    color = colorVec[0].color\n  }\n  return (\n    <Text color={color} ml=\"auto\" mr={2} mt={2} sx={{ fontSize: 1 }}>\n      {curSize} / {maxSize}\n    </Text>\n  )\n}\n\nexport const FieldInput = ({\n  input,\n  meta,\n  disabled,\n  modifiers,\n  customOnBlur,\n  showCharacterCount,\n  minLength,\n  maxLength,\n  ...rest\n}: Props) => {\n  const [curLength, setLength] = useState<number>(input?.value?.length ?? 0)\n  return (\n    <>\n      <Input\n        disabled={disabled}\n        variant={meta?.error && meta?.touched ? 'textareaError' : 'textarea'}\n        {...input}\n        {...rest}\n        minLength={minLength}\n        maxLength={maxLength}\n        onBlur={(e) => {\n          if (modifiers) {\n            e.target.value = processInputModifiers(e.target.value, modifiers)\n            input.onChange(e)\n          }\n          if (customOnBlur) {\n            customOnBlur(e)\n          }\n          input.onBlur()\n        }}\n        onChange={(ev) => {\n          showCharacterCount && setLength(ev.target.value.length)\n          input.onChange(ev)\n        }}\n      />\n      {meta.error && meta.touched && (\n        <Text sx={{ fontSize: 0, margin: 1, color: 'error' }}>\n          {meta.error}\n        </Text>\n      )}\n      {showCharacterCount && maxLength && (\n        <TextLimitIndicator\n          maxSize={maxLength}\n          minSize={minLength}\n          curSize={curLength}\n        />\n      )}\n    </>\n  )\n}\n"],"names":["capitalizeFirstLetter","str","processInputModifiers","value","modifiers","TextLimitIndicator","curSize","minSize","maxSize","percMax","colorVec","color","_a","cur","jsxs","Text","FieldInput","input","meta","disabled","customOnBlur","showCharacterCount","minLength","maxLength","rest","curLength","setLength","useState","Fragment","jsx","Input","e","ev"],"mappings":"gKAmBA,MAAAA,EAAAC,GAAAA,EAAA,OAAA,CAAA,EAAA,cAAAA,EAAA,MAAA,CAAA,EAGAC,EAAA,CAAAC,EAAAC,EAAA,MACE,OAAAD,GAAA,UACAC,EAAA,aACED,EAAAH,EAAAG,CAAA,GAEFA,GAGFE,EAAA,CAAA,CAA4B,QAAAC,EAC1B,QAAAC,EACA,QAAAC,CAEF,IAAA,OAKE,MAAAC,EAAAH,EAAAE,EACAE,EAAA,CAAiB,CAAA,MAAA,EAAA,MAAA,KAAA,EACY,CAAA,MAAA,IAAA,MAAA,MAAA,EACE,CAAA,MAAA,GAAA,MAAA,aAAA,CACM,EAErC,IAAAC,IAAAC,EAAAF,EAAA,KAAAG,GAAAA,EAAA,OAAAJ,CAAA,IAAA,YAAAG,EAAA,QAAA,QACA,OAAAN,EAAAC,IACEI,EAAAD,EAAA,CAAA,EAAA,OAEFI,EAAAC,EAAA,CAAA,MAAAJ,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,SAAA,CAAA,EAAA,SAAA,CAEKL,EAAA,MAAQE,CAAI,CAAA,CAAA,CAGnB,EAEOQ,EAAA,CAAA,CAAoB,MAAAC,EACzB,KAAAC,EACA,SAAAC,EACA,UAAAf,EACA,aAAAgB,EACA,mBAAAC,EACA,UAAAC,EACA,UAAAC,EACA,GAAAC,CAEF,IAAA,OACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,WAAAf,EAAAK,GAAA,YAAAA,EAAA,QAAA,YAAAL,EAAA,SAAA,CAAA,EACA,OAAAE,EAAAc,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,SAAAX,EACC,QAAAD,GAAA,MAAAA,EAAA,QAAAA,GAAA,MAAAA,EAAA,SAAA,gBAAA,WAC0D,GAAAD,EACtD,GAAAO,EACA,UAAAF,EACJ,UAAAC,EACA,OAAAQ,GAAA,CAEE3B,IACE2B,EAAA,OAAA,MAAA7B,EAAA6B,EAAA,OAAA,MAAA3B,CAAA,EACAa,EAAA,SAAAc,CAAA,GAEFX,GACEA,EAAAW,CAAA,EAEFd,EAAA,OAAA,CAAa,EACf,SAAAe,GAAA,CAEEX,GAAAK,EAAAM,EAAA,OAAA,MAAA,MAAA,EACAf,EAAA,SAAAe,CAAA,CAAiB,CACnB,CAAA,EACFd,EAAA,OAAAA,EAAA,SAAAW,EAAAd,EAAA,CAAA,GAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,OAAA,EAAA,SAAAG,EAAA,MAAA,EAIEG,GAAAE,GAAAM,EAGAxB,EAAC,CAAA,QAAAkB,EACU,QAAAD,EACA,QAAAG,CACA,CAAA,CACX,CAAA,CAAA,CAIR"}
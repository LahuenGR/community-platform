import{a as i}from"./jsx-runtime-913be41c.js";import{c as l,f as e}from"./utils-1b1bed3d.js";import{e as o}from"./UserEngagementWrapper-5fa2f298.js";import"./index-2506bfc3.js";import"./index-a7768622.js";import"./Button-41c38dd1.js";import"./Icon-5704fa59.js";import"./theme-ui-core-jsx-runtime.esm-9bc3c749.js";import"./emotion-element-6a883da9.browser.esm-becb4ad2.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-11801e73.js";import"./hoist-non-react-statics.cjs-dd442a32.js";import"./theme-ui-css.esm-a1197288.js";import"./emotion-styled.browser.esm-935c8bd8.js";import"./icon-verified-badge-3c009cbf.js";import"./icon-star-active-309631d9.js";import"./theme-ui-components.esm-85fd2ce8.js";import"./emotion-react.browser.esm-ac7fc07b.js";import"./CreateComment-f058f3db.js";import"./index-54304c9c.js";import"./index-0dfb046a.js";import"./index-150eb7c2.js";import"./MemberBadge-a2685196.js";import"./ExternalLink-cca335b2.js";import"./Select-5d991919.js";import"./isNativeReflectConstruct-7f9e7527.js";import"./ElWithBeforeIcon-678a36ad.js";import"./FieldDatepicker-78d5a4a1.js";import"./FieldInput-9ff512f4.js";import"./CharacterCount-3a9526b1.js";import"./FieldTextarea-60f2fca0.js";import"./Username-244e3be3.js";import"./index-4d501b15.js";import"./InternalLink-e8b10725.js";import"./GlobalStyles-6382182d.js";import"./ImageGallery-a59a6108.js";import"./iframe-9a4630ab.js";import"../sb-preview/runtime.js";import"./Loader-dd43aedd.js";import"./MapMemberCard-e5e75e55.js";import"./Modal-b2a7bed1.js";import"./ModerationStatus-67336dc1.js";import"./MoreContainer-364cbc52.js";import"./NotificationItem-9101eafa.js";import"./NotificationList-a0e8b58b.js";import"./OsmGeocoding-370c8c79.js";import"./ProfileLink-a6de5083.js";import"./ResearchEditorOverview-48b1552b.js";import"./Tag-396fe4f3.js";import"./TextNotification-637d6422.js";import"./Tooltip-60f84766.js";import"./UserStatistics-640194d1.js";import"./VideoPlayer-d43b95ea.js";import"./BlockedRoute-e5b2b969.js";import"./TabbedContent-dbf187d0.js";import"./DiscussionTitle-2b5a24fb.js";import"./inheritsLoose-0022215d.js";const qe={title:"Components/CommentList",component:o},t=()=>i(o,{comments:l(2),handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>null}),m=()=>i(o,{comments:l(20),handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>null}),r=()=>{const D=[e({replies:[e(),e()]}),e(),e()];return i(o,{comments:D,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>Promise.resolve()})},n=l(20,{isEditable:!1}),s=()=>i(o,{comments:n,highlightedCommentId:n[n.length-2]._id,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>null});var a,p,d;t.parameters={...t.parameters,docs:{...(a=t.parameters)==null?void 0:a.docs,source:{originalSource:"() => <CommentList comments={createFakeComments(2)} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => null} />",...(d=(p=t.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};var h,c,C;m.parameters={...m.parameters,docs:{...(h=m.parameters)==null?void 0:h.docs,source:{originalSource:"() => <CommentList comments={createFakeComments(20)} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => null} />",...(C=(c=m.parameters)==null?void 0:c.docs)==null?void 0:C.source}}};var u,v,P;r.parameters={...r.parameters,docs:{...(u=r.parameters)==null?void 0:u.docs,source:{originalSource:`() => {
  // TODO: This is a temporary solution to get nested comments to pass type check
  const comments: any = [fakeComment({
    replies: [fakeComment(), fakeComment()]
  }), fakeComment(), fakeComment()];
  return <CommentList comments={comments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => Promise.resolve()} />;
}`,...(P=(v=r.parameters)==null?void 0:v.docs)==null?void 0:P.source}}};var g,E,f;s.parameters={...s.parameters,docs:{...(g=s.parameters)==null?void 0:g.docs,source:{originalSource:"() => <CommentList comments={highlightedCommentList} highlightedCommentId={highlightedCommentList[highlightedCommentList.length - 2]._id} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => null} />",...(f=(E=s.parameters)==null?void 0:E.docs)==null?void 0:f.source}}};const Me=["Default","Expandable","WithNestedComments","Highlighted"];export{t as Default,m as Expandable,s as Highlighted,r as WithNestedComments,Me as __namedExportsOrder,qe as default};
//# sourceMappingURL=CommentList.stories-eadae546.js.map
